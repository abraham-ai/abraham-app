type Creation @entity(immutable: false) {
  id: ID! # session UUID
  messageCount: Int!
  firstMessageAt: BigInt!
  lastActivityAt: BigInt!
  ethSpent: BigInt! # total Wei spent on blessings + praises (user costs)
  closed: Boolean!
  totalBlessings: Int! # matches contract Session.totalBlessings
  totalPraises: Int! # matches contract Session.totalPraises
  messages: [Message!]! @derivedFrom(field: "creation")
}

type Message @entity(immutable: false) {
  id: ID! # "${sessionId}-${messageId}"
  creation: Creation!
  uuid: String! # original per-session message UUID
  author: Bytes!
  cid: String! # IPFS CID for the JSON blob (content + media)
  timestamp: BigInt!
  praiseCount: Int! # mirrors on-chain Message.praiseCount
  praises: [Praise!]! @derivedFrom(field: "message")
}

type Praise @entity(immutable: true) {
  id: ID! # "${sessionId}-${messageId}-${txHash}-${logIdx}"
  message: Message!
  praiser: Bytes!
  timestamp: BigInt!
}

type User @entity(immutable: false) {
  id: ID! # address
  praisesGiven: Int!
  praisesReceived: Int!
}
